{"version":3,"sources":["webpack:///../src/docs/components/root.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Calendar","CalendarProvider","Root","dateAdapter","AddYourComponentHere","adapter","style","display","isMDXComponent"],"mappings":"wSAUaA,G,UAAe,S,8MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,4BAAW,0BAAYC,WAAW,KAAvB,QAAX,2CAAuG,0BAAYA,WAAW,KAAvB,YAAvG,KACA,qBAAG,0BAAYA,WAAW,KAAvB,QAAH,iIACO,6BAAGA,WAAW,KAAQ,CACzB,KAAQ,2DADL,eADP,KAIA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gWAAmWC,SAAO,GAC3YL,QACAH,kBACAS,eACAC,aACAC,qBACAC,SACAC,gBACAC,0BAR2Y,gBAS3Yd,IAT2Y,EAU3YH,eAV2Y,GAW1YO,QAAQ,eACR,WAYC,OAAO,YAAC,IAAD,CAAkBW,QAASF,IAAaX,WAAY,CACzDU,KAZF,SAAgBT,GACd,OAAO,4BACD,mBAAKa,MAAO,CACdC,QAAS,SAEH,YAAC,IAAD,CAAsBb,QAAQ,yBAC9B,YAAC,IAAD,eAAUD,EAAV,CAAiBC,QAAQ,cAOlCA,QAAQ,oBACP,YAAC,IAAD,CAAUA,QAAQ,iBAI1B,iBAAQ,CACN,GAAM,SADR,SAGA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,WACH,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iCAMN,iBAAQ,CACN,GAAM,aADR,aAGA,wEACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mDAIL,wFAAuE,0BAAYA,WAAW,KAAvB,cAAvE,YAA0I,0BAAYA,WAAW,KAAvB,oBAA1I,IAA2M,kBAAIA,WAAW,MAA1N,iBACW,6BAAGA,WAAW,KAAQ,CAC7B,KAAQ,oFADD,gCADX,KAIA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,oEAIL,mJ,4MAKJJ,EAAWiB,gBAAiB","file":"component---src-docs-components-root-mdx-2b3658913fb2b397693f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/dev/use-date-input3/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { Calendar, CalendarProvider, Root } from \"@use-date-input/core\";\nimport { adapter as dateAdapter } from \"@use-date-input/date-fns-adapter\";\nimport { DemoContent as AddYourComponentHere } from \"../../gatsby-theme-docz/components/DemoContent\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"root\"\n    }}>{`Root`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Root`}</inlineCode>{` component is the root component of the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`Root`}</inlineCode>{` enables you to re-compose the Calendar with additional UI elements, such as shortcut lists or additional branding.\nRefer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://mark-tate.github.io/use-date-input/composition\"\n      }}>{`Composition`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  function MyRoot(props) {\\n    return (\\n      <>\\n        <div style={{ display: \\'flex\\' }}>\\n          <AddYourComponentHere />\\n          <Root {...props} />\\n        </div>\\n      </>\\n    )\\n  }\\n  return (\\n    <CalendarProvider adapter={dateAdapter} components={{ Root: MyRoot }}>\\n      <Calendar />\\n    </CalendarProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Calendar,\n      CalendarProvider,\n      Root,\n      dateAdapter,\n      AddYourComponentHere,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        function MyRoot(props) {\n          return <>\n                <div style={{\n              display: \"flex\"\n            }}>\n                    <AddYourComponentHere mdxType=\"AddYourComponentHere\" />\n                    <Root {...props} mdxType=\"Root\" />\n                </div>\n             </>;\n        }\n\n        return <CalendarProvider adapter={dateAdapter} components={{\n          Root: MyRoot\n        }} mdxType=\"CalendarProvider\">\n            <Calendar mdxType=\"Calendar\" />\n        </CalendarProvider>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Class name of root element`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"importing\"\n    }}>{`Importing`}</h2>\n    <p>{`It can be imported as either the base component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Root } from \"@use-date-input/core\";\n`}</code></pre>\n    <p>{`or as an overridable component that can be replaced through the `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` prop in `}<inlineCode parentName=\"p\">{`CalendarProvider`}</inlineCode>{`.`}<br parentName=\"p\"></br>{`\n`}{`Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://mark-tate.github.io/use-date-input/theming#how-to-replace-ui-components\"\n      }}>{`How to replace UI components`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { CustomisableMonthRoot } from \"@use-date-input/core\";\n`}</code></pre>\n    <p>{`If providing your own component, it can be useful to import the base component and use it within your composition.  `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}